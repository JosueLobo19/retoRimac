service: reto-Rimac
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  region: us-west-2
  iamRoleStatements: 
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-west-2:310109826654:table/PersonajeStarkWar

functions:
  mostrarSwapi:
    handler: src/mostrarIntegracion.mostrarPersonaje
    events:
      - http:
          path: /mostrarPersonajeIntegracionSwapi
          method: get
          cors: true
  mostrarRegistros:
    handler: src/mostrarRegistros.mostrarRegistros
    events:
      - http:
          path: /mostrarRegistrosBd
          method: get
          cors: true
  mostrarUnRegistro:
    handler: src/mostrarUnRegistro.mostrarBusqueda
    events:
      - http:
          path: /mostrarBusqueda/{id}
          method: get
          cors: true
  eliminarUnRegistro:
    handler: src/eliminarRegistro.eliminarBusqueda
    events:
      - http:
          path: /eliminarBusqueda/{id}
          method: delete
          cors: true
  registrarPersonaje:
    handler: src/agregarPersonaje.agregarPersonaje
    events:
      - http:
          path: /agregarPersonaje
          method: post
          cors: true

resources:
  Resources: 
    PersonajeStarkWar: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PersonajeStarkWar
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
plugins:
  - serverless-offline